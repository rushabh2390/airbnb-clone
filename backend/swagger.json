{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "My User Project CRUD",
      "description": "My User Project Application API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:9000",
    "basePath": "/",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
		"/users/": {
    "get": {
      "tags": [
        "Users"
      ],
      "summary": "User data Display (first 10 user right now only)",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "user data",
          "schema": {
            "$ref": "#/definitions/Users"
          }
        },
        "400": {
          "description": "No users",
          "schema": {
            "$ref": "#/definitions/message"
          }
        }
      }
    } 
	},
      "/users/register": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Create new user in system",
          "parameters": [
            {
              "name": "User",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        } 
      },
	  "/users/{userid}": {
        "put": {
          "tags": [
            "Users"
          ],
          "summary": "User data updation",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "User that you want to update",
              "schema": {
                "type":"string"
              }
            },
            {
              "name": "User",
              "in": "body",
              "description": "User that you want to update",
              "schema": {
                "$ref": "#/definitions/updateUser"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "user data updated",
              "schema": {
                "$ref": "#/definitions/updateUser"
              }
            },
			"400": {
              "description": "user name is not found",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Users"
          ],
          "summary": "User data updateion",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "User that we want to delete",
              "schema": {
                "$ref": "#/definitions/deleteUser"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "user data deleted",
              "schema": {
                "$ref": "#/definitions/message"
              }
            },
			"400": {
              "description": "user name is not found",
              "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        }
      },
	  "/users/{username}": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "User data Display",
		  "parameters": [
            {
              "name": "username",
              "in": "path",
              "required":true,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "user data",
			  "schema": {
                "$ref": "#/definitions/User"
              }
            },
			"400": {
              "description": "user name is not found",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }

          }
        } 
      },
	  "/places/register": {
        "post": {
          "tags": [
            "Places"
          ],
          "summary": "Create new place in system",
          "parameters": [
            {
              "name": "Place",
              "in": "body",
              "description": "place that you want to create",
              "schema": {
                "$ref": "#/definitions/Place"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New place is created",
              "schema": {
                "$ref": "#/definitions/Place"
              }
            }
          }
        } 
      },
	  "/places/{placeid}": {
        "put": {
          "tags": [
            "Places"
          ],
          "summary": "place data updation",
          "parameters": [
            {
              "name": "placeid",
              "in": "path",
              "description": "place that you want to update",
              "schema": {
                "type":"string"
              }
            },
            {
              "name": "Place",
              "in": "body",
              "description": "place that you want to update",
              "schema": {
                "$ref": "#/definitions/Place"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "place data  is updated",
              "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Places"
          ],
          "summary": "place data updateion",
          "parameters": [
            {
              "name": "placeid",
              "in": "path",
              "description": "place that we want to delete",
              "schema": {
                "$ref": "#/definitions/deletePlace"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "place data deleted",
              "schema": {
                "$ref": "#/definitions/message"
              }
            },
            "400": {
                    "description": "placename is not found",
                    "schema": {
                      "$ref": "#/definitions/message"
                    }
                  }
          }
        }
    },
	  "/places/": {
        "get": {
          "tags": [
            "Places"
          ],
          "summary": "Place data Display (first 10 place right now only)",
		  "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "place data",
              "schema": {
                "$ref": "#/definitions/Place"
              }
            },
			"400": {
              "description": "No places",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        } 
      },
	  "/places/{placename}": {
        "get": {
          "tags": [
            "Places"
          ],
          "summary": "place data Display",
		  "parameters": [
            {
              "name": "placename",
              "in": "path",
              "required":true,
              "type":"string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "place data",
			  "schema": {
                "$ref": "#/definitions/Place"
              }
            },
			"400": {
              "description": "place name is not found",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }

          }
        } 
      },
	"/reviews/add": {
        "post": {
          "tags": [
            "Reviews"
          ],
          "summary": "Create new review in system",
          "parameters": [
            {
              "name": "Review",
              "in": "body",
              "description": "Review that you want to create",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New place is created",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            }
          }
        } 
      },
	  "/reviews/{reviewerid}/{placeid}": {
        "put": {
          "tags": [
            "Reviews"
          ],
          "summary": "review data updation",
          "parameters": [
            {
              "name": "reviewerid",
              "in": "path",
              "description": "review that you want to update",
              "schema": {
                "type":"string"
              }
            },
            {
              "name": "placeid",
              "in": "path",
              "description": "review that you want to update",
              "schema": {
                "type":"string"
              }
            },
            {
              "name": "Review",
              "in": "body",
              "description": "review that you want to update",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "review data  is updated",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            },
            "400":{
              "description": "place is not found",
                    "schema": {
                      "$ref": "#/definitions/message"
                    }
            }
          }
        },
        "delete": {
          "tags": [
            "Reviews"
          ],
          "summary": "Delete review data Display",
		        "parameters": [
              {
                "name": "reviewerid",
                "in": "path",
                "description": "review that you want to update",
                "schema": {
                  "type":"string"
                }
              },
              {
                "name": "placeid",
                "in": "path",
                "description": "review that you want to update",
                "schema": {
                  "type":"string"
                }
              }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "review  is deleted",
			  "schema": {
                "$ref": "#/definitions/Reviews"
              }
            },
			"400": {
              "description": "username is not found",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            },
			"400": {
              "description": "place is not found",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }

          }
        }
      },
	  "/reviews/": {
        "get": {
          "tags": [
            "Reviews"
          ],
          "summary": "review data Display (first 10 place right now only)",
		  "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "review data",
              "schema": {
                "$ref": "#/definitions/Reviews"
              }
            },
			"400": {
              "description": "No reviews",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        } 
      },
	  "": {
         
      },
	  "/reviews/{placename}": {
        "get": {
          "tags": [
            "Reviews"
          ],
          "summary": "Places' review data Display",
		  "parameters": [
            {
              "name": "placename",
              "in": "path",
              "required":true,
              "type": "string"
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Place's review data",
			  "schema": {
                "$ref": "#/definitions/Reviews"
              }
            },
			"400": {
              "description": "No reviews",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }

          }
        } 
      },
	  "/searches/": {
        "post": {
          "tags": [
            "Search place"
          ],
          "summary": "Places' data (first 10 with match write either city as place name or write near me and enter longitude and latitude)",
		  "parameters": [
            {
              "name": "search",
              "in": "body",
			  "required":true,
              "schema": {
                "$ref": "#/definitions/search"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "search data",
			  "schema": {
                "$ref": "#/definitions/Searches"
              }
            },
			"400": {
              "description": "No result found",
			  "schema": {
                "$ref": "#/definitions/message"
              }
            }

          }
        } 
      }
      
    },
    "definitions": {
      "User": {
        "required": [
          "user_name",
          "user_email",
          "user_password",
		      "user_role"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
		  "email": {
            "type": "string"
          },
		  "password": {
            "type": "string"
          }, 
		  "role": {
            "type": "string",
            "enum":["user","admin"]
          }
         
         
        }
      },
      "updateUser": {
        "required": [
          "user_password",
          "user_role"
          
        ],
        "properties": {
         
      "password": {
            "type": "string"
          },
		  "role": {
            "type": "string",
			      "enum":["user","admin"]
          }
         
        }
      },
	  "deleteUser": {
        "required": [
          "user_name"         
        ],
        "properties": {
         
          "username": {
            "type": "string"
          }         
        }
      },
      "Users": {
        "type": "array",
        "$ref": "#/definitions/User"
      },
	  "message":{
		"required": [
          "message"
          ],
		 "properties": {
         
				"message": {
				"type": "string"
			}
		  }
	  },
	  "Place": {
        "required": [
          "place_name",
		      "place_summary",
		      "place_street",
		      "place_city",
		      "place_state",
		      "place_country"
        ],
        "properties": {
          "placename": {
            "type": "string"
          },
		       "summary": {
            "type": "string"
          },
		      "street": {
            "type": "string"
          }, 
		      "city": { 
			      "type": "string"
            },
		      "state": { 
			      "type": "string"
          },
		      "country": { 
			      "type": "string"
          } 
		}
      },
      "updatePlace": {
        "required": [
          "place_summary",
		      "place_street",
		      "place_city",
		      "place_state",
		      "place_country"
        ],
        "properties": {
          "summary": {
            "type": "string"
          },
		      "street": {
            "type": "string"
          }, 
		      "city": { 
			      "type": "string"
          },
          "state": { 
            "type": "string"
              },
          "country": { 
            "type": "string"
              } 
		}
      },
	  "deletePlace": {
        "required": [
          "placename"         
        ],
        "properties": {
         
          "placename": {
            "type": "string"
          }         
        }
      },
      "Places": {
        "type": "array",
        "$ref": "#/definitions/place"
      },
	  "Review": {
        "required": [
          "review_comments",
		      "reviews_place",
		      "reviewer_name"
        ],
        "properties": {
          "comment": {
            "type": "string"
          },
		    "placename": {
            "type": "string"
          },
		    "reviewername": {
            "type": "string"
          } 
		}
      },
      "updateReview": {
        "required": [
          "review_comments"
        ],
        "properties": {
          "comment": {
            "type": "string"
          }
		}
      },
	  "deleteReview": {
        "required": [
          "reviews_place",
		      "reviewer_name"        
        ],
        "properties": {
          "placename": {
				    "type": "string"
			    },
          "reviewername": {
            "type": "string"
          }
            }
          },
          "Reviews": {
            "type": "array",
            "$ref": "#/definitions/Review"
          },
	  "search":{
		"properties": {
			
			"place": {
				"type": "string"
			},
			"check-in": {
				"type": "string"
			},
			"check-out": {
				"type": "string"
			},
			"guests":{
				"type": "string"
			}
        }
	  },
	  "Searches":{
		"type": "array",
        "$ref": "#/definitions/search"
      
	  }
     
    }
  }
